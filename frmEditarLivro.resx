<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANgBAADYAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKSkpiSsrK4IgICAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCx5LCws/2JiYsno6Oh40dHRCwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHR0dFirq6vm+Pj4//b29v/q6urm39zfZgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVapowFFmD9BJUfvsSVH77ElR++xJUfvscfLfnGIPG4RiD
        xuEYg8bhGIPG4RiDxuEYg8bhGIPG4RiDxuEYg8bhGIPG4RiDxuEYg8bhVqXV6Pz8/P/5+fn/9vb2/+7b
        6P/afr//2JnHhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdqn5oNU3//DVN//w1Tf/8NU3//DVN//xuI
        zf8WkuH/FpLh/xaS4f8WkuH/FpLh/xaS4f8WkuH/FpLh/xaS4f8WkuH/FpLh/xaS4f80oOX//Pz8//n3
        +P/msdb/3ovG/9hot//Ycbn915/GLQAAAAAAAAAAAAAAAAAAAAAAAAAAFW6mmw1UgP8NVID/DVSA/w1U
        gP8NVID/HInO/xeT4v8Xk+L/F5Pi/xeT4v8Xk+L/F5Pi/xeT4v8Xk+L/F5Pi/xeT4v8Xk+L/F5Pi/xyV
        4//y5vL/4JTK/9drt//WaLX/3oHC/9pquf/bhsHnAAAAAAAAAAAAAAAAAAAAAAAAAAAVcKmbDlSB/w5U
        gf8OVIH/DlSB/w5Ugf8dis//GJTj/xiU4/8YlOP/GJTj/xiU4/8YlOP/GJTj/xiU4/8YlOP/GJTj/xiU
        4/8YlOP/GJTj/7+Szv/VZbT/3onE/9Zntf/Zeb3/3nK9/9xtu//cmcmgAAAAAAAAAAAAAAAAAAAAABVw
        qZsOVYL/DlWC/w5Vgv8OVYL/DlWC/x6L0f8ZleT/GZXk/xmV5P8ZleT/GZXk/xmV5P8ZleT/GZXk/xmV
        5P8ZleT/GZXk/xmV5P8ZleT/Kpjj/9h7wP/XaLb/3obE/9pquf/fi8f/4HG//990v/7Wm8hFAAAAAAAA
        AAAAAAAAGXKpmw9Wgv8PVoL/D1aC/w9Wgv8PVoL/H4vR/xqW5f8aluX/Gpbl/xqW5f8aluX/Gpbl/xqW
        5f8aluX/Gpbl/xqW5f8aluX/Gpbl/xqW5f8aluX/bZ/g/9ptuv/cdb3/3nfB/91vvP/ii8n/4nPB/9+G
        xvLbkrYHAAAAAAAAAAAZcqubD1aD/w9Wg/8PVoP/D1aD/w9Wg/8fjNL/G5fm/xuX5v8bl+b/G5fm/xuX
        5v8bl+b/G5fm/xuX5v8bl+b/G5fm/xuX5v8bl+b/G5fm/xuX5v8bl+b/t5nU/91tvP/gisf/4XLA/+F8
        w//mfsb/5HXE/99/w4kAAAAAAAAAABlyrZsQV4T/EFeE/xBXhP8QV4T/EFeE/x+N0/8bmOf/G5jn/xuY
        5/8bmOf/G5jn/xuX5v8cl+T/JZni/zSd4P8rm+L/G5bj/xyY5v8bmOf/G5jn/xuY5/8jmub/2onJ/99w
        vv/kjsv/5HXE/+aGye3lhsn/49Xj9MXF63IAAAAAGXKtmxBYhf8QWIX/EFiF/xBYhf8QWIX/II/U/xyZ
        6P8cmej/HJno/xyZ6P83n+L/kMDe/8zc5v/q6ur/7u7u/+zs7P/j5+j/sc/i/2Wv3f8dmef/HJno/xyZ
        6P9Yn+P/4njD/+F4xP/ggcn34p/P/+rn7Pq5uOr6R0fh1UBA3wgZda2bEVmG/xFZhv8RWYb/EVmG/xFZ
        hv8ikNT/HZrp/x2a6f8dmun/Z7Lh/+Xq7f/Q6Pb/e8Lw/02v7f86puv/Pqjr/2C37v+g0vL/7vL1/6vN
        4/8knOj/HZrp/x2a6f+antv/5H7F/+PO4/fi4ez6cXHk/0VF4/9ISOX/SkrpRRl1rpsRWYf/EVmH/xFZ
        h/8RWYf/EVmH/yOQ1v8em+r/Hpvq/1Gr4//w8vT/jMrx/yGb6P8+ouL/Mp/j/x6a6P8yn+P/PaLj/yGb
        5/9Aquz/2ez3/4XC5/8em+r/Hpvq/zKZ09bl3ujxwsLo+UlJ4f9GRuT/SUnn/kxM6ZdmZv8FGnWumxJa
        iP8SWoj/ElqI/xJaiP8SWoj/JJDW/x+b6v8fm+r/w93s/7DZ8/8qnuf/t9Lj/+/v7//r7O3/p8vi/+rr
        7f/v7+//0+Do/2Kv4P8fmun/H5vq/x+b6v8fm+r/VJu0/8ieVP9JSN31R0fl/0pK6OlMTOtNAAAAAAAA
        AAAceLCbEluI/xJbiP8SW4j/EluI/xJbiP8kkdf/IJzr/zej6P/3+Pj/T7Dt/4fC6f/6+vr/h8jx/zem
        7P+43fX/+vr6/7ze9P+JyfL/8fL0/2mz5P8gnOv/IJzr/yCc6/9XnbX/3qtB/6WGgahMTOmNTU3yFAAA
        AAAAAAAAAAAAABx4spsTW4n/E1uJ/xNbif8TW4n/E1uJ/yWS2P8hnez/VrLr//n6+v8noO3/tdry//r6
        +v8yo+z/IZ3s/zCk7f/w9vn/x+Hy/yGd7P+LyvL/4+vx/yyh6v8hnez/IZ3s/1mft//ir0X/47BGiwAA
        AAAAAAAAAAAAAAAAAAAAAAAAHniymxNciv8TXIr/E1yK/xNciv8TXIr/JpPZ/yKe7f9bte//+vr6/yyg
        7P+q1/P/+vr6/0ar6v8inu3/Ip7t/8bi9f/w9Pf/Jp7r/yqh7v/u9Pn/Zbbo/yKe7f8inu3/WqC5/+Wy
        SP/ntEmLAAAAAAAAAAAAAAAAAAAAAAAAAAAeeLKbFF2L/xRdi/8UXYv/FF2L/xRdi/8nlNn/I5/u/0Or
        7//6+vr/S67s/3G/8f/6+vr/er/q/yOf7v8jn+7/r9jz//r6+v9Nruv/I5/u/8vl9v+Exu//I5/u/yOf
        7v9borr/6LVM/+u2TYsAAAAAAAAAAAAAAAAAAAAAAAAAAB56s5sUXoz/FF6M/xRejP8UXoz/FF6M/yeV
        2/8joO//I6Dv/+Hv+P+PyOr/J6Lv/9Tq9//i6/D/V67l/0mp5//h6/L/+vr6/3rB7v8joO//1Obz/3nD
        8v8joO//I6Dv/12kvP/suU//77tQfwAAAAAAAAAAAAAAAAAAAAAAAAAAH3qzmxVejf8VXo3/FV6N/xVe
        jf8VXo3/J5bc/ySh8P8kofD/hsn0/+Xt8v85pur/Oqrx/8bk9v/z8/P/7/Dw/63a9v/6+vr/p9Xy/0ir
        6P/3+Pj/R6/x/ySh8P8kofD/TqPN4e6+VInxuFUSAAAAAAAAAAAAAAAAAAAAAAAAAAAfe7WbFV+O/xVf
        jv8VX47/FV+O/xVfjv8ol93/JaLx/yWi8f8qpPH/yeX3/8ve6/9CqOf/JaHw/zqr8v8zqPL/JaLx/yWh
        8P87pun/y9/r/7je9v8lovH/JaLx/yWi8f8shOH6PDzK3Tk5xjoAAAAAAAAAAAAAAAAAAAAAAAAAAB97
        tZsWYI7/FmCO/xZgjv8WYI7/FmCO/yqY3v8mo/L/JqPy/yaj8v80qfP/u9/2/+nr7f+nzeT/dbjh/2mz
        4/9vtuH/msfj/+Pq7f/I5ff/NKnz/yaj8v8mo/L/JqPy/y2D5v8/P9z/QUHcigAAAAAAAAAAAAAAAAAA
        AAAAAAAAH3u4mxZgj/8WYI//FmCP/xZgj/8WYI//Kpje/yek8/8npPP/J6Tz/yek8/8npPP/YLv1/6vZ
        9//Y6/f/5vD2/+Du9/+74Pf/dcP1/yql8/8npPP/J6Tz/yek8/8npPP/L4Xo/0ND3/9EROKLAAAAAAAA
        AAAAAAAAAAAAAAAAAAAhfbibF2GQ/xdhkP8XYZD/F2GQ/xdhkP8rmt7/KKX0/yil9P8opfT/KKX0/yil
        9P8opfT/KKX0/yil9P8opfT/KKX0/yil9P8opfT/KKX0/yil9P8opfT/KKX0/yil9P8whun/Rkbj/0hI
        5YsAAAAAAAAAAAAAAAAAAAAAAAAAACF9uJsXYpH/F2KR/xdikf8XYpH/F2KR/yya4P8ppvX/Kab1/ymm
        9f8ppvX/Kab1/ymm9f8ppvX/Kab1/ymm9f8ppvX/Kab1/ymm9f8ppvX/Kab1/ymm9f8ppvX/Kab1/zOJ
        6/9KSub/S0vniwAAAAAAAAAAAAAAAAAAAAAAAAAAI3+6mxhjkv8YY5L/GGOS/xhjkv8YY5L/LJvh/yqn
        9v8qp/b/Kqf2/yqn9v8qp/b/Kqf2/yqn9v8qp/b/Kqf2/yqn9v8qp/b/Kqf2/yqn9v8qp/b/Kqf2/yqn
        9v8qp/b/NIrt/01N6f9OTuuKAAAAAAAAAAAAAAAAAAAAAAAAAAAkf7qbGGOT/xhjk/8YY5P/GGOT/xhj
        k/8tm+H/K6f2/yun9v8rp/b/K6f2/yun9v8rp/b/K6f2/yun9v8rp/b/K6f2/yun9v8rp/b/K6f2/yun
        9v8rp/b/K6f2/yun9v82i+7/UVHt9VNT8EQAAAAAAAAAAAAAAAAAAAAAAAAAACSAvJsZZJT/GWSU/xlk
        lP8ZZJT/GWSU/y2c4v8rqPf/K6j3/yuo9/8rqPf/K6j3/yuo9/8rqPf/K6j3/yuo9/8rqPf/K6j3/yuo
        9/8rqPf/K6j3/yuo9/8rqPf/K6j3/yyo+K8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJIC8mxll
        lP8ZZZT/GWWU/xlllP8ZZZT/Lp3i/yyp+P8sqfj/LKn4/yyp+P8sqfj/LKn4/yyp+P8sqfj/LKn4/yyp
        +P8sqfj/LKn4/yyp+P8sqfj/LKn4/yyp+P8sqfj/LKn4rwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAlgryZGmaV/xpmlf8aZpX/GmaV/xpmlf8wnuT/Lar5/y2q+f8tqvn/Lar5/y2q+f8tqvn/Lar5/y2q
        +f8tqvn/Lar5/y2q+f8tqvn/Lar5/y2q+f8tqvn/Lar5/y2q+f8tqvmuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACSGwj8dbaD8GmaW/xpmlv8aZpb/GmaW/zCe5P8tqvn/Lar5/y2q+f8tqvn/Lar5/y2q
        +f8tqvn/Lar5/y2q+f8tqvn/Lar5/y2q+f8tqvn/Lar5/y2q+f8tqvn/Lar59yyq+l0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///j////4P///+B/AAAAPwAAAB8AAAAfAAAADwAAAAcAAAADAAAAAwAA
        AAEAAAAAAAAAAAAAAAAAAAADAAAABwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAH8AAAB/AAAAfwAAAH8=
</value>
  </data>
</root>