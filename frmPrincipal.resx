<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEBfEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AQQF8QAAAAAAAAAAAAAA/1HS+P9R0vj/UdL4/1HS+P9R0vj/UdL4/1HS
        +P9R0vj/UdL4/1HS+P9R0vj/UdL4/1HS+P9R0vj/UdL4/1HS+P9R0vj/UdL4/1HS+P9R0vj/UdL4/1HS
        +P9R0vj/UdL4/1HS+P9R0vj/UdL4/1HS+P8AAAD/AAAAAAAAAAABBATyAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEEBfEAAAAAAAAAAAsMB5AEBgP1FBkP8UNU
        L/pvi03/HSQU8QAAAEgAAAAAAAAAAAAAAAAAAAAAAAAA/0ys8v9MrPL/TKzy/0ys8v8AAAD/SSie/0ko
        nv9JKJ7/SSie/0konv8AAAD//6RX//+kV///pFf//6RX//+kV/8AAAD/AAAAAAAAAAAAAAAACw4JtFlv
        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
        AAP8AAAD/AAAA/4/gAP//4AD//+A//////8=
</value>
  </data>
</root>