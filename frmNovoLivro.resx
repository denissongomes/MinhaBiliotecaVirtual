<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzszMKrq4ySLCrM2qwqzNqrq4ySLOzMwoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvrzAQrqwyjq+sM/WvrDP/r6wz/6+sM/+vrDP/r6wz9a+r
        M4yqqjMPAAAAAAAAAAAAAAAAAAAAANjY2A3Z2dlJ2NjYVdjY2FXY2NhV2NjYVdjY2FXY2NhV2NjYVdjY
        2FXY2NhV2NjYVdjY2FXY2NhV2NjYVdjY2FXY2NhVzMmhba+sNNyvrDP/r6wz/6+sM/+vrDP/r6wz/6+s
        M/+vrDP/r6wz/6+sM9mxqjIkAAAAAAAAAADX19cT2NjY3tjY2P/Y2Nj/2NjY/9jY2P/Y2Nj/2NjY/9jY
        2P/Y2Nj/2NjY/9jY2P/Y2Nj/2NjY/9jY2P/Y2Nj/2NjY/9XVzf+0sUj5r6wz/6+sM/+vrDP/r6wz/7Wz
        Q/+1skL/r6wz/6+sM/+vrDP/r6wz/6+sM9mqqjMPAAAAANXV1WfY2Nj/09PT/8DAwP/AwMD/wMDA/8DA
        wP/AwMD/wMDA/8DAwP/AwMD/wMDA/8DAwP/S0tL/zc3N/8DAwP/AwMD/url1/6+sM/+vrDP/r6wz/6+s
        M/+vrDP/2ded/9nXnf+vrDP/r6wz/6+sM/+vrDP/r6wz/66sM4sAAAAAqKi8jdjY2P/X19f/zs7O/83N
        zf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/zs7O/9fX1//U1NT/zc3N/8zLxv+xrjj+r6wz/6+s
        M/+vrDP/r6wz/6+sM//a2KD/2tig/6+sM/+vrDP/r6wz/6+sM/+vrDP/r6wz9bOzMwpvb5y2i4us/8PD
        zv/Nzdb/z8/Y/8/P2P/Pz9j/z8/Y/8/P2P/Pz9j/z8/Y/8/P2P/Pz9j/z8/Y/8/P2P/Pz9j/xsWo/6+s
        M/+vrDP/r6wz/6+sM/+vrDP/r6wz/9rYoP/a2KD/r6wz/6+sM/+vrDP/r6wz/6+sM/+vrDP/rq4ySFZW
        j5Q1NXz/PT2X/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP93dYz/r6wz/6+sM/+1s0P/2Ned/9rYoP/a2KD/7u3T/+7t0//a2KD/2tig/9jXnf+1skL/r6wz/6+s
        M/+urDNoNjZ8dzU1fP89PZf/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/3Z1i/+vrDP/r6wz/7WzQ//Z153/2tig/9rYoP/u7dP/7u3T/9rYoP/a2KD/2ded/7Wz
        Q/+vrDP/r6wz/6+sM2k2Nnx3NTV8/z09l/9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/ammg/6+sM/+vrDP/r6wz/6+sM/+vrDP/r6wz/9rYoP/a2KD/r6wz/6+s
        M/+vrDP/r6wz/6+sM/+vrDP/r6s0STY2fHc1NXz/PT2X/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9TUsX/rKk4/6+sM/+vrDP/r6wz/6+sM/+vrDP/2tig/9rY
        oP+vrDP/r6wz/6+sM/+vrDP/r6wz/6+sM/WzszMKNjZ8dzU1fP89PZf/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP+GhHX/r6wz/6+sM/+vrDP/r6wz/6+s
        M//Z153/2ded/6+sM/+vrDP/r6wz/6+sM/+vrDP/rqwyjgAAAAA2Nnx3NTV8/z09l/9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/1VUwf+hn0n/r6wz/6+s
        M/+vrDP/r6wz/7WzQ/+1s0P/r6wz/6+sM/+vrDP/r6wz/6+sM9qvrzAQAAAAADY2fHc1NXz/PT2X/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/1xc
        tf+hn0n/r6wz/6+sM/+vrDP/r6wz/6+sM/+vrDP/r6wz/6+sM/+vrDPasaoyJAAAAAAAAAAANjZ8dzU1
        fP89PZf/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/1VUwf+Fg3b/rao1+q+sM/+vrDP/r6wz/6+sM/+vrDP2rqwyjq+vMBAAAAAAAAAAAAAA
        AAA2Nnx3NTV8/z09l/9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9TUsPdsKw0Sq6sMmuurDJrr6s0SbOzMwoAAAAAAAAAAAAA
        AAAAAAAAAAAAADY2fHc1NXz/PT2X/05OzP9OTsz/SkrE/0ZGu/9GRrv/Rka7/0ZGu/9GRrv/Rka7/0ZG
        u/9GRrv/Rka7/0ZGu/9GRrv/Rka7/0lJxP9OTsz/Tk7M/05OzN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAANjZ8dzU1fP89PZf/Tk7M/05OzP9ISMD/QkK3/0JCt/9CQrf/QkK3/0JC
        t/9CQrf/QkK3/0JCt/9CQrf/QkK3/0JCt/9CQrf/SEjA/05OzP9OTsz/Tk7M3QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Nnx3NTV8/z09l/9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTszdAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY2fHc1NXz/PT2X/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjZ8dzU1fP89PZf/Tk7M/05O
        zP96etn/zc3x/9DQ8f/Q0PH/0NDx/9DQ8f/Q0PH/0NDx/9DQ8f/Q0PH/0NDx/9DQ8f/Q0PH/uLjr/1FR
        zf9OTsz/Tk7M3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Nnx3NTV8/z09
        l/9OTsz/Tk7M/8PD7v//////////////////////////////////////////////////////////////
        ////////b2/W/05OzP9OTszdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY2
        fHc1NXz/PT2X/05OzP9OTsz/xMTu////////////////////////////////////////////////////
        //////////////////9xcdb/Tk7M/05OzN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAANjZ8dzU1fP89PZf/Tk7M/05OzP/ExO7/////////////////////////////////////////
        /////////////////////////////3Fx1v9OTsz/Tk7M3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA2Nnx3NTV8/z09l/9OTsz/Tk7M/8TE7v//////////////////////////////
        ////////////////////////////////////////cXHW/05OzP9OTszdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADY2fHc1NXz/PT2X/05OzP9OTsz/xMTu////////////////////
        //////////////////////////////////////////////////9xcdb/Tk7M/05OzN0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjZ8dzU1fP89PZf/Tk7M/05OzP/Dw+7/////////
        /////////////////////////////////////////////////////////////29v1v9OTsz/Tk7M3QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Nnx3NTV8/z09l/9OTsz/Tk7M/3x8
        2f/NzfH/0NDx/9DQ8f/Q0PH/0NDx/9DQ8f/Q0PH/0NDx/9DQ8f/Q0PH/0NDx/9DQ8f+6uuv/UVHN/05O
        zP9OTszdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY2fHc1NXz/PT2X/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDR8azU1
        fP89PZf/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAxMXsfNTV88D09l/9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05O
        zP9OTsz/Tk7M/05OzP9OTsz/Tk7M/05OzP9OTszRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAxMXsfPDyWg0tLw4RNTcx3TU3Md01NzHdNTcx3TU3Md01NzHdNTcx3TU3Md01N
        zHdNTcx3TU3Md01NzHdNTcx3TU3Md01NzHdNTcx3Tk7LdkxMzi8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///4H///4AeAAAADAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAQAAAAMAAAAHAAAAHwAAA/8AAAP/AAAD/wAAA/8AAAP/AAAD/wAAA/8AAAP/AAAD/wAA
        A/8AAAP/AAAD/wAAA/8AAAP/AAAD/4AAA/8=
</value>
  </data>
</root>